name: Publish Discloud App

on:
  push:
    branches:
      - main
      - 1-automatizar-deploy-discloud

jobs:
  publish-discloud:
    runs-on: ubuntu-latest

    steps:
      # Faz checkout da branch selecionada
      - name: Checkout Code
        uses: actions/checkout@v4.2.2

      # Configura o Java
      - name: Set up JDK
        uses: actions/setup-java@v4.6.0
        with:
          distribution: 'zulu'
          java-version: '17'

      # Executa o Maven para fazer o build
      - name: Build with Maven
        run: mvn clean install

      # Captura o nome do arquivo gerado
      - name: Find Build Artifact
        id: find-artifact
        run: echo "ARTIFACT_NAME=$(find target -name '*.jar' -type f | xargs -n 1 basename)" >> $GITHUB_ENV

      # Copia e ajusta o discloud.config
      - name: Prepare discloud.config
        run: |
          cp discloud/discloud.config target/
          sed -i "s/APP_DISCLOUD_ID_PLACEHOLDER/${{ vars.APP_DISCLOUD_ID }}/g" target/discloud.config
          sed -i "s/ARTIFACT_NAME_PLACEHOLDER/${{ env.ARTIFACT_NAME }}/g" target/discloud.config

      # Copia e ajusta o application.yaml
      - name: Prepare application.yaml
        run: |
          cp discloud/application.yaml target/
          sed -i "s/TWILIO_ACCOUNT_SID_PLACEHOLDER/${{ secrets.TWILIO_ACCOUNT_SID }}/g" target/application.yaml
          sed -i "s/TWILIO_AUTH_TOKEN_PLACEHOLDER/${{ secrets.TWILIO_AUTH_TOKEN }}/g" target/application.yaml
          sed -i "s/TWILIO_PHONE_NUMBER_PLACEHOLDER/${{ secrets.TWILIO_PHONE_NUMBER }}/g" target/application.yaml
          sed -i "s/SENDGRID_API_KEY_PLACEHOLDER/${{ secrets.SENDGRID_API_KEY }}/g" target/application.yaml
          sed -i "s/SENDGRID_SENDER_EMAIL_PLACEHOLDER/${{ vars.SENDGRID_SENDER_EMAIL }}/g" target/application.yaml
          sed -i "s/SECURITY_TOKEN_PASSWORD_PLACEHOLDER/${{ secrets.SECURITY_TOKEN_PASSWORD }}/g" target/application.yaml
          sed -i "s/SECURITY_TOKEN_EXPIRATION_PLACEHOLDER/${{ secrets.SECURITY_TOKEN_EXPIRATION }}/g" target/application.yaml

      # Gera o arquivo ZIP com discloud.config e o artefato
      - name: Create ZIP Package
        run: |
          cd target
          zip ${{ vars.APP_DISCLOUD_ID }}.zip $ARTIFACT_NAME discloud.config application.yaml

      - name: UploadZip to Discloud - Send
        id: upload-zip
        uses: marco-quicula/discloud-api-action@next
        with:
          discloud_api_token: ${{ secrets.DISCLOUD_API_TOKEN }}
          command: 'upload-zip'
          file: 'target/${{ vars.APP_DISCLOUD_ID }}.zip'
          actionIfExists: 'DELETE'

      - name: UploadZip to Discloud - Validate
        run: |
          # Validate http_code
          if [ "${{ steps.upload-zip.outputs.http_code }}" -ne 200 ]; then
            echo "[ERROR] Error while executing upload. http_code=${{ steps.upload-zip.outputs.http_code }}"
            exit 1
          else
            echo "[SUCCESS] Upload executed successfully"
          fi
        shell:
          bash
